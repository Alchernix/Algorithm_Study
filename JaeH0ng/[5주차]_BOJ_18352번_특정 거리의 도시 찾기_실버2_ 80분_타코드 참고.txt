#include<iostream>
#include<queue> // bfs사용을 위함
using namespace std;

int main(){
    int n,m,k,x;
    cin >> n>> m>> k>> x;
    
    vector<vector<int>> graph(n+1);//그래프를 인접리스트로 표현
    vector<bool> distance(n+1, -1);
    
    // 그래프 간선 정보 입력
    for(int i=0; i<m; i++){
        int a,b;
        cin >> a >> b;
        graph[a].push_back(b);
    }
    
    // bfs 사용
    queue<int> q;
    q.push(x);
    distance[x]=0; // 시작도시 거리는 0
    
    while(!q.empty()){
        int current = q.front();
        q.pop();
        
        for(int i=0; i < graph[current].size(); i++){
            int connected = graph[current][i];
            if(distance[connected]==-1){ // 방문하지 않은 도시에 대해
                distance[connected] = distance[current]+1;
                q.push(neighbor);
            }
        }
    }
    
    // 결과 출력
    vector<int> result;
    for(int i=0; i<n+1; i++){
        if(distance[i]==k){
            result.push_back(i);
        }
    }
    
    if(result.empty()){
        cout << -1 << endl;
    } else{
        sort(result.begin(), result.end());
        for(int j=0; j<result.size(); j++){
            cout << result[j]<<endl;
        }
    }

    
    return 0;
}