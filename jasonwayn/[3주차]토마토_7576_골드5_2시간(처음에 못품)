import sys
from collections import deque
from itertools import chain
input=sys.stdin.readline

m,n=map(int,input().split())
matrix=[]
for _ in range(n):
    matrix.append(list(map(int,input().split())))
time=[[0]*m for _ in range(n)] #cannot come up with making time matrix at first.

queue=deque()
for i in range(n):
    for j in range(m):
        if matrix[i][j]==1:
            queue.append([j,i])
if 0 not in chain(*matrix):
    print(0)
else:
    while(queue):
        v=queue.popleft()
        if v[0]+1<m and matrix[v[1]][v[0]+1]==0:
            time[v[1]][v[0]+1]=time[v[1]][v[0]]+1
            matrix[v[1]][v[0]+1]=1
            queue.append([v[0]+1,v[1]])
        if v[0]-1>=0 and matrix[v[1]][v[0]-1]==0:
            time[v[1]][v[0]-1]=time[v[1]][v[0]]+1
            queue.append([v[0]-1,v[1]])
            matrix[v[1]][v[0]-1]=1
        if v[1]+1<n and matrix[v[1]+1][v[0]]==0:
            time[v[1]+1][v[0]]=time[v[1]][v[0]]+1
            queue.append([v[0],v[1]+1])
            matrix[v[1]+1][v[0]]=1
        if v[1]-1>=0 and matrix[v[1]-1][v[0]]==0:
            time[v[1]-1][v[0]]=time[v[1]][v[0]]+1
            queue.append([v[0],v[1]-1])
            matrix[v[1]-1][v[0]]=1
    
    if 0 in chain(*matrix):
        print(-1)
    else:
        max_time=0
        for row in time: #getting max value from 2-dimensional matrix
            max_time=max(max_time,max(row))
        print(max_time)